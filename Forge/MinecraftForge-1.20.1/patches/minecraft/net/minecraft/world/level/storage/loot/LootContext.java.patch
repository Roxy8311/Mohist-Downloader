--- a/net/minecraft/world/level/storage/loot/LootContext.java
+++ b/net/minecraft/world/level/storage/loot/LootContext.java
@@ -88,15 +_,43 @@
       return new LootContext.VisitedEntry<>(LootDataType.f_278496_, p_279163_);
    }
 
+   // ============================== FORGE START ==============================
+   public int getLootingModifier() {
+      return net.minecraftforge.common.ForgeHooks.getLootingLevel(m_78953_(LootContextParams.f_81455_), m_78953_(LootContextParams.f_81458_), m_78953_(LootContextParams.f_81457_));
+   }
+
+   private ResourceLocation queriedLootTableId;
+
+   private LootContext(LootParams p_287722_, RandomSource p_287702_, LootDataResolver p_287619_, ResourceLocation queriedLootTableId) {
+      this(p_287722_, p_287702_, p_287619_);
+      this.queriedLootTableId = queriedLootTableId;
+   }
+
+   public void setQueriedLootTableId(ResourceLocation queriedLootTableId) {
+      if (this.queriedLootTableId == null && queriedLootTableId != null) this.queriedLootTableId = queriedLootTableId;
+   }
+
+   public ResourceLocation getQueriedLootTableId() {
+      return this.queriedLootTableId == null ? net.minecraftforge.common.loot.LootTableIdCondition.UNKNOWN_LOOT_TABLE : this.queriedLootTableId;
+   }
+   // =============================== FORGE END ===============================
+
    public static class Builder {
       private final LootParams f_78956_;
       @Nullable
       private RandomSource f_78958_;
+      private ResourceLocation queriedLootTableId; // Forge: correctly pass around loot table ID with copy constructor
 
       public Builder(LootParams p_287628_) {
          this.f_78956_ = p_287628_;
       }
 
+      public Builder(LootContext context) {
+         this.f_78956_ = context.f_78914_;
+         this.f_78958_ = context.f_78907_;
+         this.queriedLootTableId = context.queriedLootTableId;
+      }
+
       public LootContext.Builder m_78965_(long p_78966_) {
          if (p_78966_ != 0L) {
             this.f_78958_ = RandomSource.m_216335_(p_78966_);
@@ -105,6 +_,11 @@
          return this;
       }
 
+      public LootContext.Builder withQueriedLootTableId(ResourceLocation queriedLootTableId) {
+         this.queriedLootTableId = queriedLootTableId;
+         return this;
+      }
+
       public ServerLevel m_78962_() {
          return this.f_78956_.m_287182_();
       }
@@ -121,7 +_,7 @@
             randomsource = serverlevel.m_213780_();
          }
 
-         return new LootContext(this.f_78956_, randomsource, minecraftserver.m_278653_());
+         return new LootContext(this.f_78956_, randomsource, minecraftserver.m_278653_(), queriedLootTableId);
       }
    }
 
@@ -141,6 +_,11 @@
 
       public LootContextParam<? extends Entity> m_79003_() {
          return this.f_78995_;
+      }
+
+      // Forge: This method is patched in to expose the same name used in getByName so that ContextNbtProvider#forEntity serializes it properly
+      public String getName() {
+         return this.f_78994_;
       }
 
       public static LootContext.EntityTarget m_79006_(String p_79007_) {
